{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","props","state","children","this","className","style","background","Component","DownIcon","onClick","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","TitlesAndIcons","color","changeColor","bind","setState","onMouseOver","onMouseleave","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","AboutSection","sections","items","p","content","SkillCard","skill","image","SkillSection","eachskill","Navigation","href","App","text","zamine","counter","background_first","background_second","background_third","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37b20eea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Fullpage.css';\r\n \r\nclass Fullpage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render(){\r\n        const{ children }=this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className || '' } `} style={{\r\n                background:this.props.background\r\n    \r\n}}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fullpage;","import React, { Component } from \"react\";\r\n\r\nconst DownIcon = (props) => {\r\n    return(\r\n        <div\r\n        onClick={props.onClick}\r\n        style={{\r\n          display:\"flex\",\r\n          flexDirection:\"row\",\r\n          alignItems:\"center\",\r\n          justifyContent:\"center\",\r\n          marginBottom:\"-34px\",\r\n          transform:\"translateY(-45px)\"\r\n        }}\r\n        >\r\n          <div\r\n          style={{\r\n            maxWidth:\"30px\",\r\n          \r\n          }}\r\n          >\r\n            <img src={props.icon} />\r\n          </div>\r\n         </div>\r\n    )\r\n}\r\nexport default DownIcon","import React, { Component } from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport './TitlesAndIcons.css' ;\r\nimport { findByLabelText } from '@testing-library/react';\r\nimport DownIcon from '../components/DownIcon';\r\nimport { Link , Element} from 'react-scroll'\r\nimport { Transform } from \"stream\";\r\n\r\n\r\nclass TitlesAndIcons extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      color:'white'\r\n    }\r\n    this.changeColor = this.changeColor.bind(this);\r\n  }\r\n  changeColor () {\r\n    this.setState({\r\n      color:this.state.color ==='white' ? 'yellow' :'white'\r\n    });\r\n  }\r\n    render() { \r\n        return (\r\n          <div> \r\n      <Fullpage className=\"first\" background={this.props.background}>  \r\n      <h1 className=\"title\"\r\n      style={{\r\n        color:this.state.color\r\n      }  \r\n    }\r\n\r\n      onMouseOver={\r\n        this.changeColor\r\n      }\r\n\r\n      onMouseleave={ ()=>{\r\n        this.changeColor();\r\n      }}\r\n\r\n      >{data.title} </h1>\r\n      <div>\r\n        <h2 style={{ color: this.props.color }}> {data.subtitle} </h2>\r\n      </div>\r\n      <div className=\"icons-wrapper\">\r\n        {Object.keys(data.links).map(key => {\r\n            return (\r\n              <div className=\"icon\">\r\n               <SocialIcon url={data.links[key]} />\r\n               </div>\r\n            );\r\n          })}\r\n       </div>\r\n      </Fullpage>\r\n      <Link \r\n      activeClass=\"active\" \r\n      to=\"about\" \r\n      spy={true} \r\n      smooth={true} \r\n      offset={50} \r\n      duration={500} \r\n      delay={0}>\r\n       <DownIcon\r\n       icon={data.icons.down}\r\n       />\r\n       </Link>\r\n       <Element name=\"about\" className=\"element\"/>\r\n        </div>\r\n\r\n        ); \r\n    }\r\n}\r\nexport default TitlesAndIcons;","import React, { Component } from 'react';\r\nimport {Link, Element} from \"react-scroll\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport './AboutSection.css' \r\n\r\nimport DownIcon from \"../components/DownIcon.js\";\r\n \r\n\r\n \r\nclass AboutSection extends Component {\r\n  state = {};\r\n    render() { \r\n        return (\r\n          <div>\r\n            <Fullpage className=\"second\" background={this.props.background}>\r\n      <h3 style={{ color: this.props.color }}>{data.sections[0].title} </h3>\r\n       <div className=\"paragraphs\" style={{ color: this.props.color }}>\r\n         {\r\n           data.sections[0].items.map(p => {\r\n            return <p>{p.content}</p>;\r\n            \r\n         })}\r\n       </div>\r\n      </Fullpage>\r\n      <Element name=\"Skills\" className=\"element\" />\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default AboutSection;","import React, { Component } from 'react';\r\nimport './SkillCard.css';\r\n \r\nclass SkillCard extends Component{\r\n    render(){\r\n        const{ skill }=this.props\r\n        return(\r\n            <div className=\"card\">\r\n            <div className=\"image-wrapper\">\r\n              <img src={skill.content.image} />\r\n            </div>\r\n            <div className=\"skill-title-wrapper\">\r\n            <h4>{skill.content.title}</h4>\r\n           </div>\r\n         </div>\r\n        );\r\n    }\r\n}\r\nexport default SkillCard;","import React, { Component } from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport './SkillSection.css' \r\n\r\n \r\n\r\n \r\nclass SkillSection extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={};\r\n  }\r\n    render() { \r\n        return (\r\n          <div>\r\n            <Fullpage className=\"third\" background={this.props.background}>\r\n      <h3>{data.sections[1].title}</h3>\r\n        <div className=\"cards-wrapper\">\r\n          {\r\n            data.sections[1].items.map(eachskill => {\r\n              return(\r\n                <SkillCard skill ={eachskill}/>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </Fullpage>\r\n      </div>\r\n        );\r\n    }\r\n}\r\nexport default SkillSection;","import React, { Component } from \"react\";\r\nimport { Link , Element} from 'react-scroll'\r\nimport \"../components/Navigation\";\r\n\r\nimport \"./Navigation.css\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\" style={{ background: \"transparent\" }}>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n        >\r\n         <a href=\"\">about</a>\r\n        </Link>\r\n\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Skills\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n        >\r\n        <a href=\"\">Skills</a>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","\nimport React, { Component } from 'react';\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Navigation from './components/Navigation';\n\nimport {Link , Element} from \"react-scroll\";\nimport SnowStorm from 'react-snowstorm';\n\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"white\",\n      background_first: \"light blue\",\n      background_second: \"light cayn\",\n      background_third: \"light aqua\",\n      counter: 0\n    };\n  }\n  changeColor = () => {\n    let text = [\"green\", \"aqua\", \"red\", \"brown\"];\n    let zamine = [\"#461220\", \"#011f4b\", \"#251e3e\", \"#1e1f26\"];\n    if (this.state.counter > 3) {\n      this.setState({\n        counter: 0,\n        color: text [this.state.counter],\n        background_first: \" light pink\",\n        background_second: \" light pink\",\n        background_third: \" light pink\"\n      });\n    } else\n      this.setState({\n        color: text [this.state.counter],\n        background_first: zamine[this.state.counter],\n        background_second: zamine[this.state.counter],\n        background_third: zamine[this.state.counter],\n        counter: this.state.counter + 1\n      });\n  };\n\n  render() {\n    return(\n    <div className=\"App\">\n      <div>\n\t\t\t\t<SnowStorm />\n\t\t\t</div>\n        <Element name=\"Home\" className=\"element\" />\n        <Navigation background={this.state.background} />\n       <div className=\"changetheme\">\n          <img onClick={this.changeColor} src=\"images/color.png\" alt=\"\" />\n        </div>\n      \n      <TitlesAndIcons\n      color={this.state.color}\n      background={this.state.background_first}\n      /> \n      <AboutSection\n       color={this.state.color}\n       background={this.state.background_second}/>\n\n      <SkillSection\n         color={this.state.color}\n         background={this.state.background_third}/>\n      \n    \n     \n    </div> \n  );\n}\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}